<?phpclass Paginator {	private $total_records;	private $limit;	private $offset;	private $total_pages;	private $current_page;	private $pages;	private $page_page;	private $next_page;	public function __construct($_total_records = 0, $_limit = 10, $_pages = 3) {		$this->setData($_total_records, $_limit, $_pages);	}	public function setData($_total_records, $_limit = 10, $_pages = 4) {		$this->total_pages = $this->current_page = 1;		$this->pages = ((int) $_pages <= 0) ? 1 : (int) $_pages;		$this->total_records = (int) $_total_records;		$this->limit = (int) $_limit;		//$this->offset = (int) $_offset;		if ($this->limit != 0) {			$this->total_pages = (int) ceil($this->total_records / $this->limit);		}		if ($this->total_pages < 1) {			$this->total_pages = 1;		}	}	public function selectPage($_page) {		$page = (int) $_page;		if ($page <= 0) {			$page = 1;		} else if ($page > $this->total_pages) {			$page = $this->total_pages;		}		$this->current_page = $page;		$this->next_page = (($this->current_page + 1) > $this->total_pages) ? false : $this->current_page + 1;		$this->prev_page = (($this->current_page - 1) < 1) ? false : $this->current_page - 1;		$this->calculateOffset();	}	private function calculateOffset() {		$this->offset = ($this->current_page - 1) * $this->limit;	}	public function getLimit() {		return $this->limit;	}	public function getOffset() {		return $this->offset;	}	public function getCurrentPage() {		return $this->current_page;	}	public function getprevPage() {		return $this->prev_page;	}	public function getNextPage() {		return $this->next_page;	}	public function getTotalPages() {		return $this->total_pages;	}	public function getData() {		$result = array();		$result['total_pages'] = $this->getTotalPages();		$result['current_page'] = $this->getCurrentPage();		$result['limit'] = $this->getLimit();		$result['offset'] = $this->getOffset();		$result['next_page'] = $this->getNextPage();		$result['prev_page'] = $this->getPrevPage();		return $result;	}	public function getPages() {		$pages_shown = array();		$start = $this->current_page - $this->pages;		$end = $this->current_page + $this->pages;		if ($start <= 0) {			$start = 1;		}		if ($end > $this->total_pages)			$end = $this->total_pages;		for ($i = $start; $i <= $end; $i++) {			$pages_shown[] = $i;		}		return $pages_shown;	}};